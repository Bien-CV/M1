package tests;


import java.util.GregorianCalendar;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import org.junit.Before;
import org.junit.Test;

import fr.univnantes.cta.CompassDirection;
import fr.univnantes.cta.impl.LatitudeImpl;
import fr.univnantes.cta.impl.LongitudeImpl;
import fr.univnantes.cta.impl.PositionImpl;

public class Position_Test {
	protected  PositionImpl pos;
	protected LatitudeImpl lati;
	protected LongitudeImpl longi;

	@Before
	public void setUp(){
		// on recreer lat et lon car elles ont déja été testées et elles ,ne sont pas trop lourdes
		lati = new LatitudeImpl(0, 0, 0, CompassDirection.NORTH);
		longi = new LongitudeImpl(0, 0, 0, CompassDirection.EAST);
		pos = new PositionImpl(lati, longi);
	}
	

	@Test
	public void testGetLatitude() {
		assertEquals(pos.getLatitude(),lati);
	}

	@Test
	public void testGetLongitude() {
		assertEquals(pos.getLongitude(),longi);
	}

	@Test
	public void testDistanceTo() {
		LatitudeImpl other_lati = new LatitudeImpl(0, 0, 0, CompassDirection.NORTH);
		LongitudeImpl other_longi = new LongitudeImpl(0, 0, 0, CompassDirection.EAST);
		PositionImpl other = new PositionImpl(lati, longi);
		
		double distance = Math.acos(
                lati.Cos() * longi.Cos() *
                other_lati.Cos() *
                other_longi.Cos() +
                lati.Cos() * longi.Sin() *
                other_lati.Cos() *
                        other_longi.Sin() +
                lati.Sin() * other_lati.Sin()
            ) * 6378.14;   //valeur de rayon au moment du test,=> getteur de rayon, constante?
		assertTrue(pos.distanceTo(other)== distance);
	}

}
