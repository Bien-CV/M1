package tests;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import fr.univnantes.cta.Airplane;
import fr.univnantes.cta.Airport;
import fr.univnantes.cta.Flight;
import fr.univnantes.cta.FlightPlan;
import fr.univnantes.cta.impl.AirplaneImpl;
import fr.univnantes.cta.impl.AirportImpl;
import fr.univnantes.cta.impl.CreateCivilFlight;
import fr.univnantes.cta.impl.FlightPlanImpl;

public class CreateMilitarFlight_test {
	private Airport _depart, _arrive;
	private Airplane _avion;
	private FlightPlan _flightplane;
	private CreateCivilFlight f;
	private static final int _poidspassager = 70;
	private static final int _poidsequipement = 100;
	
	@Before
	public void setUp() throws Exception {
		_depart = new AirportImpl("Depart");
        _arrive = new AirportImpl("Arriv√©e");
        _avion = new AirplaneImpl(1.,2,3,4);
        _flightplane = new FlightPlanImpl();
        f = new CreateCivilFlight(_depart, _arrive, _avion, _flightplane, 42);
	}

	@Test
	public void testLoadingWeight() {
		assertTrue(f.loadingWeight()==42*(_poidspassager+_poidsequipement));
	}

	@Test
	public void testTotalWeight() {
		fail("Not yet implemented");
	}

	@Test
	public void testCreateMilitarFlight() {
		fail("Not yet implemented");
	}


	@Test
	public final void testGetAirplane() {
		assertEquals(f.getAirplane(), _avion);
	}

	@Test
	public final void testGetArrival() {
		assertEquals(f.getArrival(),_arrive);
	}

	@Test
	public final void testGetDeparture() {
		assertEquals(f.getDeparture(), _depart);
	}

	@Test
	public final void testGetFlightPlan() {
		assertEquals(f.getFlightPlan(),_flightplane);
	}

}
