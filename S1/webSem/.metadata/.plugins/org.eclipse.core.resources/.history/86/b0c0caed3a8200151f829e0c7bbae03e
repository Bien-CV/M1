import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.jena.ontology.OntModel;
import org.apache.jena.ontology.OntModelSpec;
import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.ResultSet;
import org.apache.jena.query.ResultSetFormatter;
import org.apache.jena.rdf.model.Model;
import org.apache.jena.rdf.model.ModelFactory;
import org.apache.jena.util.FileManager;



public class TpOntologyMain {

	static public String readQuery(String filename){
		try {
            File file = new File(filename);
            FileInputStream inputStream = new FileInputStream(file);
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            StringBuilder data = new StringBuilder();
            String line;

            while ((line = reader.readLine()) != null) {
                data.append(line + "\n");
            }

            inputStream.close();
			return data.toString();
        }
        catch(Exception ex){
            return null;
        }
	}
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
		//sans inférence
		ControllerBis ctrl = new ControllerBis();
		ctrl.readingRDF("../tp4owl/tpOntology.rdf");
		
		
		//avec inférence
		
		Model m = ModelFactory.createOntologyModel();
		InputStream in = FileManager.get().open("../tp4owl/tpOntology.rdf");
		if (in == null) {
		    throw new IllegalArgumentException("File not found");
		}

		// Load file content
		m.read(in, null);
		m.write(System.out, "Turtle");
		ControllerBis ctrlInf= new ControllerBis(m);
		
		String request = readQuery("src/requeteTestFausseInference.rq");
		Query query = QueryFactory.create(request);
		QueryExecution qexec = QueryExecutionFactory.create(query, m);
		ResultSet results =  qexec.execSelect();

		// Output query results	
		ResultSetFormatter.out(System.out, results, query);

		// Important - free up resources used running the query
		qexec.close();
		
		
		
		

	}

}
